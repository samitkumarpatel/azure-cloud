# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
    ls -alGh
  displayName: 'Run a multi-line script'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/vm'
    backendServiceArm: 'SERVICE_PRINCIPLE_NAME'
    backendAzureRmResourceGroupName: 'RESOURCE_GROUP_NAME'
    backendAzureRmStorageAccountName: 'STORAGE_ACCOUNT_NAME'
    backendAzureRmContainerName: 'CONTAINER_NAME'
    backendAzureRmKey: 'STORAGE_SECRET'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/vm'
    environmentServiceNameAzureRM: 'SERVICE_PRINCIPLE_NAME'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/vm'
    commandOptions: '-auto-approve'
    environmentServiceNameAzureRM: 'SERVICE_PRINCIPLE_NAME'
